version: "3.8"

services:
  web:
    image: public.ecr.aws/d8f2p0h3/secure-ai-tools:latest
    platform: linux/amd64
    volumes:
      - ./web:/app/volume
    env_file:
      - .env
    environment:
      - INFERENCE_SERVER=http://inference:11434/
      - VECTOR_DB_SERVER=http://vector-db:8000
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    ports:
      - 28669:28669
    command: sh -c "cd /app && node apps/web/server.js"
    depends_on:
      db:
        condition: service_started
      inference:
        condition: service_started
      vector-db:
        condition: service_started
      db-migrate-and-seed:
        condition: service_completed_successfully
        restart: false

  task-master:
    image: public.ecr.aws/d8f2p0h3/secure-ai-tools:latest
    platform: linux/amd64
    volumes:
      - ./web:/app/volume
    env_file:
      - .env
    environment:
      - INFERENCE_SERVER=http://inference:11434/
      - VECTOR_DB_SERVER=http://vector-db:8000
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    command: sh -c "cd /app && node apps/task-master/dist/main.js"
    depends_on:
      db:
        condition: service_started
      inference:
        condition: service_started
      vector-db:
        condition: service_started
      db-migrate-and-seed:
        condition: service_completed_successfully
        restart: false

  # Performs DB schema migrations and seeds db with initial data if needed.
  db-migrate-and-seed:
    image: public.ecr.aws/d8f2p0h3/secure-ai-tools:latest
    platform: linux/amd64
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    command: sh -c "cd /app && sh apps/web/tools/db-migrate-and-seed.sh ${DATABASE_FILE}"
    deploy:
      restart_policy:
        condition: none
    depends_on:
      - db

  db:
    image: postgres:latest
    volumes:
      - ./db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  vector-db:
    image: chromadb/chroma:latest
    volumes:
      # Default configuration for persist_directory is "/chroma/chroma/"
      - ./vector-db:/chroma/chroma/

  inference:
    image: ollama/ollama:latest
    volumes:
      - ./inference:/root/.ollama
    #
    # Uncomment for Linux machines with Nvidia GPUs
    # Based on https://docs.docker.com/compose/gpu-support/
    # Requires Nvidia container toolkit: https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html#installation
    #
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 'all'
    #           capabilities: [gpu]
